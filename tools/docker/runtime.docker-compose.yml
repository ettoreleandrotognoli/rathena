version: "3.7"
x-common-environment: &common-environment
    RATHENA_INTER_LOGIN_SERVER_IP: db
    RATHENA_INTER_IPBAN_DB_IP: db
    RATHENA_INTER_CHAR_SERVER_IP: db
    RATHENA_INTER_MAP_SERVER_IP: db
    RATHENA_INTER_LOG_DB_IP: db
    RATHENA_CHAR_LOGIN_IP: login
    RATHENA_CHAR_CHAR_IP: 127.0.0.1
    RATHENA_MAP_CHAR_IP: char
    RATHENA_MAP_MAP_IP: 127.0.0.1
services:
    db:
        image: "mariadb:bionic"
        restart: always
        volumes:
            - "rathenadb:/var/lib/mysql" # save database to local disk
            - "../../sql-files/:/docker-entrypoint-initdb.d" # initialize db with ./sql-files
        environment:
            MYSQL_ROOT_PASSWORD: ragnarok
            MYSQL_DATABASE: ragnarok
            MYSQL_USER: ragnarok
            MYSQL_PASSWORD: ragnarok
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]
    login:
        image: "rathena/${mod:-rathena-renewal-vip}:${version:-nightly}"
        command: "./login-server"
        restart: always
        ports:
            - "6900:6900"
        environment:
            <<: *common-environment
        depends_on:
            - db
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]
    char:
        image: "rathena/${mod:-rathena-renewal-vip}:${version:-nightly}"
        command: "./char-server"
        restart: always
        ports:
            - "6121:6121"
        environment:
            <<: *common-environment
        depends_on:
            - login
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]
    map:
        image: "rathena/${mod:-rathena-renewal-vip}:${version:-nightly}"
        command: "./map-server"
        restart: always
        ports:
            - "5121:5121"
        environment:
            <<: *common-environment
        depends_on:
            - char
        deploy:
            mode: replicated
            replicas: 1
            placement:
                constraints: [node.role == manager]

volumes:
    rathenadb:
